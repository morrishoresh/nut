# Travis CI script
################################################################################
# This file is based on a template used by zproject, but isn't auto-generated. #
################################################################################

language:
- c

cache:
- ccache

os:
- linux

sudo: false

# Tests for cppunit require C++11 which requires gcc-4.8 or newer
# This is available in either "trusty" or newer distros, or in "docker" envs
#dist: trusty

services:
- docker

# Common required packages for all common scenarios
# Note that YAML lists may be named with & and referenced with * characters;
# but without such links, every list is complete and unique (meaning that
# matrix special cases define their own settings, not append to common ones).
# See https://github.com/travis-ci/travis-ci/issues/3505
addons:
  apt:
    packages: &deps_driverlibs
    - git
    - ccache
    - libcppunit-dev
    - libcppunit-subunit-dev
    - libneon27
    - libneon27-dev
    - libltdl7
    - libltdl-dev
    - libi2c-dev
    - lua5.1
    - liblua5.1-0-dev
    - libsnmp-dev
    - libfreeipmi-dev
    - libipmimonitoring-dev
    - libusb-dev
    - linux-libc-dev
    - libpowerman0-dev
    - libavahi-common-dev
    - libavahi-core-dev
    - libavahi-client-dev
    - libgd2-xpm-dev
    - libpng-dev
    - libjpeg-dev
    - libfreetype6-dev
    - libxpm-dev
    - libxml2-utils
    - libmodbus-dev

# Define at least two jobs in the matrix, to avoid a failing job
# with "no environment variables set" and have them built (one
# is too few); but others are listed below to prioritize the
# longer jobs to start first as faster ones complete in parallel.
env:
  global:
    - CI_TIME=true
    - CI_TRACE=false
  matrix:
    - BUILD_TYPE=default
    - BUILD_TYPE=default-tgt:distcheck-light

# Builds with customized setups
# Note that doc-related builds take the longest, and Travis CI cloud
# runs only a few sub-jobs in parallel, so we want the withdoc and
# perhaps spellcheck jobs to start first, and while they are still in
# progress, others are spawned and finished - reducing overall job TTL.
# Note that the nut-driver-enumerator tests should be tried in at least
# the shell interpreters reasonable for default setups of Solaris/illumos
# (ksh) and Linux (bash, dash, etc.) common distros.
matrix:
  include:
  - env: BUILD_TYPE=default-withdoc
    os: linux
    addons:
      apt:
        packages: &deps_gendocs
        - asciidoc
        - xsltproc
        - dblatex
        - docbook-xsl
        - docbook-xsl-ns
        - source-highlight
        - libxml2-utils
  - env: BUILD_TYPE=default-spellcheck
    os: linux
    addons:
      apt:
        packages: &deps_aspell
        - aspell
        - aspell-en
  - env: BUILD_TYPE=default-shellcheck
    os: linux
    addons:
      apt:
        packages:
        - coreutils
        - file
        #TBD# - shellcheck
  - env: BUILD_TYPE=default-tgt:distcheck-valgrind
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs
        - valgrind
# Other quicker builds in standard env follow:
  - env: BUILD_TYPE=nut-driver-enumerator-test SHELL_PROGS=bash
    os: linux
    services:
        - docker
    addons:
      apt:
        packages:
        - bash
  - env: BUILD_TYPE=nut-driver-enumerator-test SHELL_PROGS=ksh
    os: linux
    services:
        - docker
    addons:
      apt:
        packages:
        - ksh
  - env: BUILD_TYPE=nut-driver-enumerator-test SHELL_PROGS=dash
    os: linux
    services:
        - docker
    addons:
      apt:
        packages:
        - dash
  - env: BUILD_TYPE=nut-driver-enumerator-test SHELL_PROGS=ash
    os: linux
    services:
        - docker
    addons:
      apt:
        packages:
        - ash
  - env: BUILD_TYPE=default-nodoc
    os: linux
    addons:
      apt:
        packages:
        - *deps_driverlibs
  - env: BUILD_TYPE=default-alldrv
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs
  - env:
    - BUILD_TYPE=default-tgt:distcheck-light
    - NO_PKG_CONFIG=true
    os: linux
    sudo: true
    addons:
      apt:
        packages:
        - *deps_driverlibs

# Re-run the build of all binaries we can make, with
# varied compiler and C/C++ standard implementations
# and different lenience against warnings. Many of
# these blocks look similar and all should have unique
# "env" field to use some with allowed_failure below.
#
# The leading NUT_MATRIX_TAG allows humans to understand
# what a test case is about in Travis CI dashboard table
# of jobs, but otherwise it is not used by script code.
#
# Note that passing multi-token C*FLAGS may be problematic
# for sub-makes like distcheck; verify thoroughly before
# trying to enable those if that would make sense anytime.
#
# Ordered by variants expected to succeed to run first,
# although with current Travis CI implementation, the env
# blocks listed in allowed_failures only run after all
# those not listed:
#
  - env: NUT_MATRIX_TAG="gnu99-gcc-default-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu99-gcc-7-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99" CC=gcc-7 CXX=g++-7
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - gcc-7
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu11-gcc-7-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu11" CXXFLAGS="-std=gnu++11" CC=gcc-7 CXX=g++-7
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - gcc-7
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu99-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99" CC=clang CXX=clang++
    os: linux
    dist: xenial
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - llvm-toolchain-xenial-5.0
        packages:
        - clang-5.0
        - clang-format-5.0
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c99-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=c99" CXXFLAGS="-std=c++99" CC=clang CXX=clang++
    os: linux
    dist: xenial
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - llvm-toolchain-xenial-5.0
        packages:
        - clang-5.0
        - clang-format-5.0
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c11-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=c11" CXXFLAGS="-std=c++11" CC=clang CXX=clang++
    os: linux
    dist: xenial
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - llvm-toolchain-xenial-5.0
        packages:
        - clang-5.0
        - clang-format-5.0
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="cDefault-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic" CXXFLAGS="-Wall -Werror"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu99-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu99" CXXFLAGS="-Wall -Werror -std=gnu++99"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c99-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c99" CXXFLAGS="-Wall -Werror -std=c++99"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu99-gcc-7-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu99" CXXFLAGS="-Wall -Werror -std=gnu++99" CC=gcc-7 CXX=g++-7
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - gcc-7
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c99-clang-5.0-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c99" CXXFLAGS="-Wall -Werror -std=c++99" CC=clang CXX=clang++
    os: linux
    dist: xenial
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - llvm-toolchain-xenial-5.0
        packages:
        - clang-5.0
        - clang-format-5.0
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c11-clang-5.0-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c11" CXXFLAGS="-Wall -Werror -std=c++11" CC=clang CXX=clang++
    os: linux
    dist: xenial
    sudo: false
    services:
        - docker
    addons:
      apt:
        sources:
        - llvm-toolchain-xenial-5.0
        packages:
        - clang-5.0
        - clang-format-5.0
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c11-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c11" CXXFLAGS="-Wall -Werror -std=c++11"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu11-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu11" CXXFLAGS="-Wall -Werror -std=gnu++11"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

# Note: some of the warnings that are hidden in this case seem to be serious
# issues that may impact viability of binaries built by C89 mode compilers!
  - env: NUT_MATRIX_TAG="gnu89-gcc-default-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu89" CXXFLAGS="-std=gnu++89"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="c89-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c89" CXXFLAGS="-Wall -Werror -std=c++89"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

  - env: NUT_MATRIX_TAG="gnu89-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu89" CXXFLAGS="-Wall -Werror -std=gnu++89"
    os: linux
    sudo: false
    services:
        - docker
    addons:
      apt:
        packages:
        - *deps_driverlibs

# Note: "env" lines below must exactly describe a matrix option defined above
  allow_failures:
#OK#  - env: NUT_MATRIX_TAG="gnu99-gcc-default-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99"
#OK#  - env: NUT_MATRIX_TAG="gnu99-gcc-7-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99" CC=gcc-7 CXX=g++-7
#OK#  - env: NUT_MATRIX_TAG="gnu11-gcc-7-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu11" CXXFLAGS="-std=gnu++11" CC=gcc-7 CXX=g++-7
#OK#  - env: NUT_MATRIX_TAG="gnu99-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu99" CXXFLAGS="-std=gnu++99" CC=clang CXX=clang++
  - env: NUT_MATRIX_TAG="c99-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=c99" CXXFLAGS="-std=c++99" CC=clang CXX=clang++
  - env: NUT_MATRIX_TAG="c11-clang-5.0-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=c11" CXXFLAGS="-std=c++11" CC=clang CXX=clang++
  - env: NUT_MATRIX_TAG="cDefault-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic" CXXFLAGS="-Wall -Werror"
  - env: NUT_MATRIX_TAG="gnu99-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu99" CXXFLAGS="-Wall -Werror -std=gnu++99"
  - env: NUT_MATRIX_TAG="c99-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c99" CXXFLAGS="-Wall -Werror -std=c++99"
  - env: NUT_MATRIX_TAG="gnu99-gcc-7-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu99" CXXFLAGS="-Wall -Werror -std=gnu++99" CC=gcc-7 CXX=g++-7
  - env: NUT_MATRIX_TAG="c99-clang-5.0-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c99" CXXFLAGS="-Wall -Werror -std=c++99" CC=clang CXX=clang++
  - env: NUT_MATRIX_TAG="c11-clang-5.0-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c11" CXXFLAGS="-Wall -Werror -std=c++11" CC=clang CXX=clang++
  - env: NUT_MATRIX_TAG="c11-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c11" CXXFLAGS="-Wall -Werror -std=c++11"
  - env: NUT_MATRIX_TAG="gnu11-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu11" CXXFLAGS="-Wall -Werror -std=gnu++11"
#OK#  - env: NUT_MATRIX_TAG="gnu89-gcc-default-nowarn" BUILD_TYPE=default-all-errors CFLAGS="-std=gnu89" CXXFLAGS="-std=gnu++89"
  - env: NUT_MATRIX_TAG="c89-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=c89" CXXFLAGS="-Wall -Werror -std=c++89"
  - env: NUT_MATRIX_TAG="gnu89-gcc-default-warn" BUILD_TYPE=default-all-errors CFLAGS="-Wall -Werror -pedantic -std=gnu89" CXXFLAGS="-Wall -Werror -std=gnu++89"

before_install:
- if [ $TRAVIS_OS_NAME == "osx" ] ; then brew update; brew install binutils asciidoc docbook-xsl ; XML_CATALOG_FILES=/usr/local/etc/xml/catalog ; export XML_CATALOG_FILES ; fi
- if [ -n "${NUT_MATRIX_TAG}" ] ; then export CFLAGS CXXFLAGS ; [ -z "$CC" ] || export CC ; [ -z "$CXX" ] || export CXX ; fi

# Hand off to generated script for each BUILD_TYPE
script: ./ci_build.sh
